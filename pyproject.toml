[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "langchain-template"
version = "0.1.0"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
description = "A template project using LangChain, Instructor, and Pydantic"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "langchain>=0.1.5",
    "langchain-core>=0.1.15",
    "langchain-community>=0.0.13",
    "langchain-openai>=0.0.5",
    "instructor>=1.7.2",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.1",
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "bandit>=1.7.5",
    "pre-commit>=3.5.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 88

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
] 